<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.order">
<!-- 리절트 맵 정의 -->
 	<resultMap id="orderResult" type="orderVO">
		<result property="ship_id" column="ship_id"/>
		<result property="ship_name" column="ship_name"/>
		<result property="phone_number" column="phone_number"/>
		<result property="primary_address" column="primary_address"/>
		<result property="user_id" column="user_id"/>
		<result property="sample4_postcode" column="sample4_postcode"/>
		<result property="sample4_roadAddress" column="sample4_roadAddress"/>
		<result property="sample4_jibunAddress" column="sample4_jibunAddress"/>
		<result property="sample4_detailAddress" column="sample4_detailAddress"/>
		<result property="sample4_extraAddress" column="sample4_extraAddress"/>
		<collection property="productVO" resultMap="productsResult"/>
	</resultMap>
	
<select id="selectBidsIdxFromDual" resultType="int">
	SELECT BIDS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectShipInfoIdxFromDual" resultType="int">
	SELECT SHIPPING_INFORMATION_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectAsksIdxFromDual" resultType="int">
	SELECT ASKS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectOrderIdxFromDual" resultType="int">
	SELECT ORDERS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectAskByIdWithSize" parameterType="map" resultType="Map">
select * from
(select hi.*,nvl(asks_idx,0) asks_idx_ 
from
    (SELECT * 
     FROM ASKS WHERE ASKS_PRODUCT_ID = #{product_id} AND ASKS_SIZE_IDX = #{product_size_idx} ORDER BY ASKS_PRICE, ASKS_REGDATE
     ) hi
right outer join dual
on asks_product_id = #{product_id2})
where rownum =1
</select>

<select id="selectBidByIdWithSize" parameterType="map" resultType="Map">
select * from
(select hi.*,nvl(bids_idx,0) bids_idx_ 
from
    (SELECT * 
     FROM BIDS WHERE BIDS_PRODUCT_ID = #{product_id} AND BIDS_SIZE_IDX = #{product_size_idx} ORDER BY BIDS_PRICE, BIDS_REGDATE
     ) hi
right outer join dual
on bids_product_id = #{product_id2})
where rownum =1
</select>


<update id="updateAsks" parameterType="Map">
		<choose>
			<when test="asks_idx != null">
				UPDATE ASKS SET ASKS_ORDER_STATE_IDX = 1, ASKS_ORDER_NUMBER =  #{orderIdx}, ASKS_MATCHED_DATE = SYSDATE  WHERE ASKS_IDX = #{asks_idx}
			</when>
			<otherwise>
				UPDATE ASKS SET ASKS_ORDER_STATE_IDX = 1, ASKS_ORDER_NUMBER =  #{orderIdx}, ASKS_MATCHED_DATE = SYSDATE  WHERE ASKS_IDX = #{newAsksIdx}
			</otherwise>
		</choose>
</update>

<update id="updateBids" parameterType="Map">
		<choose>
			<when test="newBidsIdx != null">
				UPDATE BIDS SET BIDS_ORDER_STATE_IDX = 1, BIDS_ORDER_NUMBER = #{orderIdx}, BIDS_SHIP_IDX = #{shipIdx}, BIDS_MATCHED_DATE = SYSDATE  WHERE BIDS_IDX = #{newBidsIdx}
			</when>
			<otherwise>
				UPDATE BIDS SET BIDS_ORDER_STATE_IDX = 1, BIDS_ORDER_NUMBER = #{orderIdx}, BIDS_SHIP_IDX = #{shipIdx}, BIDS_MATCHED_DATE = SYSDATE  WHERE BIDS_IDX = #{bids_idx}
			</otherwise>
		</choose>
</update>

<!-- 구매애서 들어간건지, 판매에서 들어간건지에 따라 BIDS, ASKS 중 어느 테이블에 등록 될지 나누어야함. 우선은 ASKS(판매입찰)에 올려진 상품을 구매하는걸로 가정(구매버튼을 눌렀을 때)
	
	수정할 때 참고할것
	ASKS_IDX -> 여기 들어가는 ASKS_IDX는 구매 버튼을 눌렀을 때 부터 가져가는 IDX번호임, 이걸 기준으로 BIDS테이블에 데이터가 들어가야 함
	(지금은 ASKS테이블의 IDX값이 1인 상품에서 구매 들어가는것을 기준으로함)
	
	SHIPPING_INFORMATION에 들어가는 정보는 VO에 담겨서 온 정보들
	 
	추후에 상품 데이터가 넘어오면 productVO의 IDX를 BIDS_PRODUCT_ID 여기 넣어야함 지금은 1을넣음(1번상품기준)
	
	ORDERS엔 ASKS_IDX(처음에 받아온 IDX)와 BIDS_IDX(방금 등록한 BIDS_IDX)를 등록해야하는데 어떻게?? 무얼기준으로?
	
-->
<insert id="insertShipInfo" parameterType="orderVO">
	
	INSERT INTO SHIPPING_INFORMATION(SHIP_ID,
									SHIP_NAME, 
									PRIMARY_ADDRESS,
									SECONDARY_ADDRESS, 
									PHONE_NUMBER, 
									USER_ID,
									SHIP_REGDATE,
									SHIP_UPDATE
									) 
							VALUES (
									SHIPPING_INFORMATION_SEQ.NEXTVAL,
									#{ship_name},
									#{primary_address}, 
									#{primary_address},
									#{phone_number}, 
									#{user_id},
									SYSDATE, 
									SYSDATE)
</insert>	

<insert id="insertOrders" parameterType="Map">
	<choose>
	<when test="newBidsIdx != null">
	INSERT INTO ORDERS(ORDERS_BID_IDX, ORDERS_ASK_IDX) VALUES (#{newBidsIdx},#{asks_idx})
	</when>
	<otherwise>
	INSERT INTO ORDERS(ORDERS_BID_IDX, ORDERS_ASK_IDX) VALUES (#{bids_idx},#{newBidsIdx})
	</otherwise>
	</choose>
</insert>

<select id="selectAsks" parameterType="String" resultType="Map">
	select * from asks where asks_idx = #{asks_idx}
</select>

<select id="selectBids" parameterType="String" resultType="Map">
	select * from bids where bids_idx = #{bids_idx}
</select>

<select id="selectProduct" parameterType="Int" resultType="Map">
	select * from products where product_id = #{product_id}
</select>

<!-- asks_idx가없으면? <- 판매입찰로 걸린 물품이 없다는 뜻 이전페이지에서 product_idx와 size넘겨준 값을 받아 새로운 구매입찰을 생성, 
	  참고* BIDS_PRICE는 구매희망가격
	  		 BIDS_ORDER_NUMBER 는??
	  		 
-->
<!-- asks_idx가 있으면? <- 즉시구매로 판매입찰테이블에 있는 IDX와 연결하여 데이터들을 넣어 새로운 구매입찰을 생성 -->
<insert id="insertNewBids" parameterType="Map">
	<choose>
		<when test="asks_idx eq null">
		INSERT INTO BIDS(BIDS_IDX,
						 BIDS_SIZE_IDX,
						 BIDS_PRICE,
						 BIDS_REGDATE,
						 BIDS_UPDATE,
						 BIDS_EXPIRATION,
						 BIDS_ORDER_STATE_IDX,
						 BIDS_MATCHED_DATE,
						 BIDS_TOTAL_PRICE,
						 BIDS_ORDER_NUMBER,
						 BIDS_SHIP_IDX,
						 BIDS_PRODUCT_ID,
						 BIDS_USER_EMAIL)
						VALUES
						(
						BIDS_SEQ.NEXTVAL,
						#{size},
						#{product_price},
						SYSDATE,
						SYSDATE,
						NULL,
						0,
						NULL,
						#{product_price},
						0,
						0,
						#{product_id},
						#{memberVO.user_id}
						)
		</when>
		<otherwise>
			INSERT INTO BIDS(BIDS_IDX,
							 BIDS_SIZE_IDX,
							 BIDS_PRICE,
							 BIDS_REGDATE,
							 BIDS_UPDATE,
							 BIDS_EXPIRATION,
							 BIDS_ORDER_STATE_IDX,
							 BIDS_MATCHED_DATE,
							 BIDS_TOTAL_PRICE,
							 BIDS_ORDER_NUMBER,
							 BIDS_SHIP_IDX,
							 BIDS_PRODUCT_ID,
							 BIDS_USER_EMAIL)
						 
						 VALUES (
				                BIDS_SEQ.NEXTVAL,
				                (SELECT ASKS_SIZE_IDX FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                <choose>
				                	<when test="product_price != null">
				                		#{product_price},
						               	SYSDATE,
						                SYSDATE,
						                NULL, 	
						                0,	
						                NULL,
						                #{product_price},
				                	</when>
				                	<otherwise>
				                		(SELECT ASKS_PRICE FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                1,
						                SYSDATE,
						                (SELECT ASKS_PRICE FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                	</otherwise>
				                </choose>
				                0,
				                0,
				                (SELECT ASKS_PRODUCT_ID FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                #{memberVO.user_id}
				           		 )
		</otherwise>
	</choose>			
</insert>

<!-- 위와 마찬가지로 판매입찰(ASKS)을 무조건 걸어야 하는 아이템의경우 (BIDS_IDX가 없음) "bids_idx eq null"에 PRODUCT_ID,SIZE 받아와서 넣어줘야함  -->
<insert id="insertNewAsks" parameterType="Map">
	<choose>
		<when test="bids_idx eq null">
		INSERT INTO ASKS(ASKS_IDX,
						 ASKS_SIZE_IDX,
						 ASKS_PRICE,
						 ASKS_REGDATE,
						 ASKS_UPDATE,
						 ASKS_EXPIRATION,
						 ASKS_ORDER_STATE_IDX,
						 ASKS_MATCHED_DATE,
						 ASKS_TOTAL_PRICE,
						 ASKS_ORDER_NUMBER,
						 ASKS_PRODUCT_ID,
						 ASKS_USER_EMAIL)
						VALUES
						(
						ASKS_SEQ.NEXTVAL,
						#{size},
						#{product_price},
						SYSDATE,
						SYSDATE,
						NULL,
						0,
						NULL,
						#{product_price},
						0,
						#{product_id},
						#{memberVO.user_id}
						)
		</when>
		<otherwise>
			INSERT INTO ASKS(ASKS_IDX,
							 ASKS_SIZE_IDX,
							 ASKS_PRICE,
							 ASKS_REGDATE,
							 ASKS_UPDATE,
							 ASKS_EXPIRATION,
							 ASKS_ORDER_STATE_IDX,
							 ASKS_MATCHED_DATE,
							 ASKS_TOTAL_PRICE,
							 ASKS_ORDER_NUMBER,
							 ASKS_PRODUCT_ID,
							 ASKS_USER_EMAIL)
						 
						 VALUES (
				                ASKS_SEQ.NEXTVAL,
				                (SELECT BIDS_SIZE_IDX FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                <choose>
				                	<when test="product_price != null">
				                		#{product_price},
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                0,
						                NULL,
						                #{product_price},
				                	</when>
				                	<otherwise>
				                		(SELECT BIDS_PRICE FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                1,
						                SYSDATE,
						                (SELECT BIDS_PRICE FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                	</otherwise>
				                </choose>
				                0,
				                (SELECT BIDS_PRODUCT_ID FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                #{memberVO.user_id}
				           		 )
		</otherwise>
	</choose>			
</insert>

</mapper>