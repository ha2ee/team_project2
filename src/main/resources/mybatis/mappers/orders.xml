<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.orders">

<!-- 리절트 맵 정의 -->
<resultMap id="orderResult" type="orderVO">
	<result property="ship_id" column="ship_id"/>
	<result property="ship_name" column="ship_name"/>
	<result property="phone_number" column="phone_number"/>
	<result property="primary_address" column="primary_address"/>
	<result property="user_id" column="user_id"/>
	<result property="sample4_postcode" column="sample4_postcode"/>
	<result property="sample4_roadAddress" column="sample4_roadAddress"/>
	<result property="sample4_jibunAddress" column="sample4_jibunAddress"/>
	<result property="sample4_detailAddress" column="sample4_detailAddress"/>
	<result property="sample4_extraAddress" column="sample4_extraAddress"/>
	<collection property="productVO" resultMap="productsResult"/>
</resultMap>


<select id="selectLatestOrderAsk" parameterType="map" resultType="map"> 
  <![CDATA[  

SELECT ad.*, NVL(to_char(asks_regdate,'YYYY-MM-DD HH24:MI:SS'),0) ASKS_REGDATE1
FROM(
  SELECT * 
  FROM(
    SELECT * 
    FROM(
      SELECT ASKS.*,ORDERS.*
      FROM ORDERS
      left JOIN ASKS
      ON ORDERS.ORDERS_ASK_IDX = ASKS.ASKS_IDX)
    WHERE ASKS_PRODUCT_ID = #{product_id1})
  WHERE ROWNUM =1) ad
right OUTER JOIN DUAL
on asks_product_id = #{product_id2}
 ]]>
</select> 


<select id="selectLatestOrderBid" parameterType="map" resultType="map"> 
  <![CDATA[  

SELECT ad.*, NVL(to_char(bids_regdate,'YYYY-MM-DD HH24:MI:SS'),0) BIDS_REGDATE1
FROM(
  SELECT * 
  FROM(
    SELECT * 
    FROM(
      SELECT BIDS.*,ORDERS.*
      FROM ORDERS
      left JOIN BIDS
      ON ORDERS.ORDERS_BID_IDX = BIDS.BIDS_IDX)
    WHERE BIDS_PRODUCT_ID = #{product_id1})
  WHERE ROWNUM =1) ad
right OUTER JOIN DUAL
on BIDs_product_id = #{product_id2}
 ]]>
</select> 

<select id="selectLatestOrderReal" resultType="map"> 
  <![CDATA[  
    SELECT * 
    FROM (
        SELECT *
        FROM
            (SELECT *
            FROM 
                (SELECT ASKS.*,ORDERS.*
                 FROM ORDERS
                 left JOIN ASKS
                 ON ORDERS.ORDERS_ASK_IDX = ASKS.ASKS_IDX
                 ) A
            LEFT JOIN BIDS B
            ON A.ORDERS_BID_IDX = B.BIDS_IDX)
        ORDER BY ASKS_PRICE)
    WHERE ROWNUM = 1;
  ]]>
</select> 

<select id="selectForChart" resultType="map"> 
  <![CDATA[  
SELECT z2.matched_date,z2.price
FROM (
  SELECT z1.asks_price PRICE,z1.asks_matched_date MATCHED_DATE
  FROM (
    select o1.orders_ask_idx,A1.ASKS_PRICE,A1.ASKS_MATCHED_DATE,A1.ASKS_PRODUCT_ID
    from orders O1
    left join asks A1
    on O1.orders_ask_idx = A1.asks_idx) Z1
  WHERE ASKS_PRODUCT_ID = #{product_id1}

  UNION

  SELECT z1.BIDS_price PRICE,z1.BIDS_matched_date MATCHED_DATE  
  FROM (
    select o1.orders_BID_idx,B1.BIDS_PRICE,B1.BIDS_MATCHED_DATE,B1.BIDS_PRODUCT_ID
    from orders O1
    left join BIDS B1
    on o1.orders_bid_idx = B1.BIDS_idx) Z1
  WHERE BIDS_PRODUCT_ID = #{product_id2}
) z2
ORDER BY MATCHED_DATE
  ]]>
</select> 

<select id="selectBidsIdxFromDual" resultType="int">
	SELECT BIDS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectShipInfoIdxFromDual" resultType="int">
	SELECT SHIPPING_INFORMATION_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectAsksIdxFromDual" resultType="int">
	SELECT ASKS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectOrderIdxFromDual" resultType="int">
	SELECT ORDERS_SEQ.CURRVAL FROM DUAL
</select>

<select id="selectAskByIdWithSize" parameterType="map" resultType="Map">
select * from
(select hi.*,nvl(asks_idx,0) asks_idx_ 
from
    (SELECT * 
     FROM ASKS WHERE ASKS_PRODUCT_ID = #{product_id} AND ASKS_SIZE_IDX = #{product_size_idx} ORDER BY ASKS_PRICE, ASKS_REGDATE
     ) hi
right outer join dual
on asks_product_id = #{product_id2})
where rownum =1
</select>

<select id="selectBidByIdWithSize" parameterType="map" resultType="Map">
select * from
(select hi.*,nvl(bids_idx,0) bids_idx_ 
from
    (SELECT * 
     FROM BIDS WHERE BIDS_PRODUCT_ID = #{product_id} AND BIDS_SIZE_IDX = #{product_size_idx} ORDER BY BIDS_PRICE, BIDS_REGDATE
     ) hi
right outer join dual
on bids_product_id = #{product_id2})
where rownum =1
</select>


<update id="updateAsks" parameterType="Map">
		<choose>
			<when test="asks_idx != null">
				UPDATE ASKS SET ASKS_ORDER_STATE_IDX = 1, ASKS_ORDER_NUMBER =  #{orderIdx}, ASKS_MATCHED_DATE = SYSDATE  WHERE ASKS_IDX = #{asks_idx}
			</when>
			<otherwise>
				UPDATE ASKS SET ASKS_ORDER_STATE_IDX = 1, ASKS_ORDER_NUMBER =  #{orderIdx}, ASKS_MATCHED_DATE = SYSDATE  WHERE ASKS_IDX = #{newAsksIdx}
			</otherwise>
		</choose>
</update>

<update id="updateBids" parameterType="Map">
		<choose>
			<when test="newBidsIdx != null">
				UPDATE BIDS SET BIDS_ORDER_STATE_IDX = 1, BIDS_ORDER_NUMBER = #{orderIdx}, BIDS_MATCHED_DATE = SYSDATE  WHERE BIDS_IDX = #{newBidsIdx}
			</when>
			<otherwise>
				UPDATE BIDS SET BIDS_ORDER_STATE_IDX = 1, BIDS_ORDER_NUMBER = #{orderIdx}, BIDS_MATCHED_DATE = SYSDATE  WHERE BIDS_IDX = #{bids_idx}
			</otherwise>
		</choose>
</update>

<insert id="insertShipInfo" parameterType="orderVO">
	
	INSERT INTO SHIPPING_INFORMATION(SHIP_ID,
									SHIP_NAME, 
									PRIMARY_ADDRESS,
									SECONDARY_ADDRESS, 
									PHONE_NUMBER, 
									USER_ID,
									SHIP_REGDATE,
									SHIP_UPDATE
									) 
							VALUES (
									SHIPPING_INFORMATION_SEQ.NEXTVAL,
									#{ship_name},
									#{primary_address}, 
									#{primary_address},
									#{phone_number}, 
									#{user_id},
									SYSDATE, 
									SYSDATE)
</insert>	

<insert id="insertOrders" parameterType="Map">
	<choose>
	<when test="newBidsIdx != null">
	INSERT INTO ORDERS(ORDERS_BID_IDX, ORDERS_ASK_IDX) VALUES (#{newBidsIdx},#{asks_idx})
	</when>
	<otherwise>
	INSERT INTO ORDERS(ORDERS_BID_IDX, ORDERS_ASK_IDX) VALUES (#{bids_idx},#{newAsksIdx})
	</otherwise>
	</choose>
</insert>

<select id="selectAsks" parameterType="String" resultType="Map">
	select * from asks where asks_idx = #{asks_idx}
</select>

<select id="selectBids" parameterType="String" resultType="Map">
	select * from bids where bids_idx = #{bids_idx}
</select>

<select id="selectProduct" parameterType="Int" resultType="Map">
	select * from products where product_id = #{product_id}
</select>

<insert id="insertNewBids" parameterType="Map">
	<choose>
		<when test="asks_idx eq null">
		INSERT INTO BIDS(BIDS_IDX,
						 BIDS_SIZE_IDX,
						 BIDS_PRICE,
						 BIDS_REGDATE,
						 BIDS_UPDATE,
						 BIDS_EXPIRATION,
						 BIDS_ORDER_STATE_IDX,
						 BIDS_MATCHED_DATE,
						 BIDS_TOTAL_PRICE,
						 BIDS_ORDER_NUMBER,
						 BIDS_SHIP_IDX,
						 BIDS_PRODUCT_ID,
						 BIDS_USER_EMAIL)
						VALUES
						(
						BIDS_SEQ.NEXTVAL,
						#{size},
						#{product_price},
						SYSDATE,
						SYSDATE,
						NULL,
						0,
						NULL,
						#{product_price},
						0,
						#{shipIdx},
						#{product_id},
						#{memberVO.user_id}
						)
		</when>
		<otherwise>
			INSERT INTO BIDS(BIDS_IDX,
							 BIDS_SIZE_IDX,
							 BIDS_PRICE,
							 BIDS_REGDATE,
							 BIDS_UPDATE,
							 BIDS_EXPIRATION,
							 BIDS_ORDER_STATE_IDX,
							 BIDS_MATCHED_DATE,
							 BIDS_TOTAL_PRICE,
							 BIDS_ORDER_NUMBER,
							 BIDS_SHIP_IDX,
							 BIDS_PRODUCT_ID,
							 BIDS_USER_EMAIL)
						 
						 VALUES (
				                BIDS_SEQ.NEXTVAL,
				                (SELECT ASKS_SIZE_IDX FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                <choose>
				                	<when test="product_price != null">
				                		#{product_price},
						               	SYSDATE,
						                SYSDATE,
						                NULL, 	
						                0,	
						                NULL,
						                #{product_price},
				                	</when>
				                	<otherwise>
				                		(SELECT ASKS_PRICE FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                1,
						                SYSDATE,
						                (SELECT ASKS_PRICE FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                	</otherwise>
				                </choose>
				                0,
				                #{shipIdx},
				                (SELECT ASKS_PRODUCT_ID FROM ASKS WHERE ASKS_IDX = #{asks_idx}),
				                #{memberVO.user_id}
				           		 )
		</otherwise>
	</choose>			
</insert>

<insert id="insertNewAsks" parameterType="Map">
	<choose>
		<when test="bids_idx eq null">
		INSERT INTO ASKS(ASKS_IDX,
						 ASKS_SIZE_IDX,
						 ASKS_PRICE,
						 ASKS_REGDATE,
						 ASKS_UPDATE,
						 ASKS_EXPIRATION,
						 ASKS_ORDER_STATE_IDX,
						 ASKS_MATCHED_DATE,
						 ASKS_TOTAL_PRICE,
						 ASKS_ORDER_NUMBER,
						 ASKS_PRODUCT_ID,
						 ASKS_USER_EMAIL)
						VALUES
						(
						ASKS_SEQ.NEXTVAL,
						#{size},
						#{product_price},
						SYSDATE,
						SYSDATE,
						NULL,
						0,
						NULL,
						#{product_price},
						0,
						#{product_id},
						#{memberVO.user_id}
						)
		</when>
		<otherwise>
			INSERT INTO ASKS(ASKS_IDX,
							 ASKS_SIZE_IDX,
							 ASKS_PRICE,
							 ASKS_REGDATE,
							 ASKS_UPDATE,
							 ASKS_EXPIRATION,
							 ASKS_ORDER_STATE_IDX,
							 ASKS_MATCHED_DATE,
							 ASKS_TOTAL_PRICE,
							 ASKS_ORDER_NUMBER,
							 ASKS_PRODUCT_ID,
							 ASKS_USER_EMAIL)
						 
						 VALUES (
				                ASKS_SEQ.NEXTVAL,
				                (SELECT BIDS_SIZE_IDX FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                <choose>
				                	<when test="product_price != null">
				                		#{product_price},
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                0,
						                NULL,
						                #{product_price},
				                	</when>
				                	<otherwise>
				                		(SELECT BIDS_PRICE FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                		SYSDATE,
						                SYSDATE,
						                NULL,
						                1,
						                SYSDATE,
						                (SELECT BIDS_PRICE FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                	</otherwise>
				                </choose>
				                0,
				                (SELECT BIDS_PRODUCT_ID FROM BIDS WHERE BIDS_IDX = #{bids_idx}),
				                #{memberVO.user_id}
				           		 )
		</otherwise>
	</choose>			
</insert>




</mapper>